# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#
name: Test

on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.rst"
      - ".github/workflows/*"
      - "!.github/workflows/test.yaml"
  push:
    paths-ignore:
      - "**.md"
      - "**.rst"
      - ".github/workflows/*"
      - "!.github/workflows/test.yaml"
  workflow_dispatch:

jobs:
  test:
    # NOTE: The worker environment running this job needs firefox and
    #       geckowebdriver available. Before upgrading to ubuntu-24.04 in the
    #       future, check and see its available in a location like this:
    #       https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md#browsers-and-drivers
    #
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.11"]
        jupyter_server-version: ["1", "2"]
        jupyterlab-version: ["2", "3"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"

      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 18.x
          registry-url: https://registry.npmjs.org
          cache-dependency-path: yarn.lock

      - name: Update root build packages
        run: |
          pip install --upgrade build pip

      - name: Build Python package
        run: |
          pyproject-build

      - name: Install Python package
        run: |
          pip install -vv '.\[test\]' 'jupyterlab~=${{ matrix.jupyterlab-version }}.0' 'jupyter_server~=${{ matrix.jupyter_server-version }}.0'

      - name: List Python packages
        run: |
          pip freeze
          pip check

      - name: Run tests
        run: |
          pytest -vvvv tests

      - name: Upload pytest and coverage reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: |-
            unit-tests-${{ matrix.python-version }}-${{ matrix.jupyterlab-version }}-${{ github.run_number }}
          path: |
            ./build/pytest
            ./build/coverage

      - name: Check the Notebook Server extension is installed
        run: |
          jupyter serverextension list
          jupyter serverextension list 2>&1 | grep -iE "jupyterlmod.*OK" -

      - name: Check the Jupyter Server extension is installed
        run: |
          pip install jupyter-server
          jupyter server extension list
          jupyter server extension list 2>&1 | grep -iE "jupyterlmod.*OK" -

      - name: Install JupyterLab Extension
        if: matrix.jupyterlab-version == '2'
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          cd labextension
          jupyter labextension install . --no-build --debug
          jupyter lab build --minimize=False --debug

      - name: Check the lab extension
        # We test the labextension thoroughly in the acceptance tests below, so
        # we have conditionally disabled this basic check is to avoid issues in
        # jupyterlab.browser_check with jupyterlab 2 and jupyter_server 2+.
        #
        # if: ${{ !(matrix.jupyterlab-version == '2' && matrix.jupyter_server-version != '1') }}
        run: |
          jupyter labextension list
          jupyter labextension list 2>&1 | grep -iE '@jupyterlab/jupyterlmod.*OK.*'
          python -m jupyterlab.browser_check
